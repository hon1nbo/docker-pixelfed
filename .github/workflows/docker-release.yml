---
name: Docker Release

on:
  push:
    tags:
      - "*"
      - "**"

jobs:
  php:
    name: PHP
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      # See: https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
      matrix:
        php_version:
          - 8.3
        debian_release:
          - bookworm
        php_base:
          - apache
          - fpm

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          version: latest

      # See: https://github.com/docker/login-action?tab=readme-ov-file#github-container-registry
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            name=ghcr.io/${{ github.repository }}-php,enable=true
          flavor: |
            suffix=-${{ matrix.php_version }}-${{ matrix.php_base }}-${{ matrix.debian_release }}
          tags: |
            type=semver,pattern=v{{ major }}                # v1
            type=semver,pattern=v{{ major }}.{{ minor }}    # v1.2
            type=semver,pattern=v{{ version }}              # v1.2.3
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./images/php
          file: ./images/php/Dockerfile
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          push: true
          build-args: |
            PHP_BASE_TYPE=${{ matrix.php_base }}
            PHP_VERSION=${{ matrix.php_version }}
            PHP_DEBIAN_RELEASE=${{ matrix.debian_release }}
          cache-from: |
            type=gha,scope=php-${{ matrix.php_base }}-${{ matrix.php_version }}-${{ matrix.debian_release }}
          cache-to: |
            type=gha,mode=max,ignore-error=true,scope=php-${{ matrix.php_base }}-${{ matrix.php_version }}-${{ matrix.debian_release }}

  pixelfed:
    name: pixelfed
    runs-on: ubuntu-latest
    needs: [php]

    strategy:
      fail-fast: false

      # See: https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
      matrix:
        php_version:
          - 8.3
        debian_release:
          - bookworm
        php_base:
          - apache
          - fpm
        target_runtime:
          - apache
          - fpm
          - nginx

        # See: https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs#excluding-matrix-configurations
        # See: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategymatrixexclude
        exclude:
          # targeting [apache] runtime with [fpm] base type doesn't make sense
          - target_runtime: apache
            php_base: fpm

          # targeting [fpm] runtime with [apache] base type doesn't make sense
          - target_runtime: fpm
            php_base: apache

          # targeting [nginx] runtime with [apache] base type doesn't make sense
          - target_runtime: nginx
            php_base: apache

    permissions:
      contents: read
      packages: write

    steps:
      # checout this repo
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Find Pixelfed release tag
        env:
          TAG_NAME: ${{ github.ref_name }}
        id: pixelfed_release
        run: echo "fragment=${TAG_NAME%%+*}" >> $GITHUB_OUTPUT

      # checkout pixelfed source code
      - name: Checkout pixelfed/pixelfed
        uses: actions/checkout@v4
        with:
          repository: "pixelfed/pixelfed"
          ref: "${{ steps.pixelfed_release.outputs.fragment }}"
          path: "src/"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

        # See: https://github.com/docker/login-action?tab=readme-ov-file#github-container-registry
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            name=ghcr.io/${{ github.repository }},enable=true
          flavor: |
            suffix=-${{ matrix.target_runtime }}-${{ matrix.php_version }}
          tags: |
            type=semver,pattern=v{{ major }}                # v1
            type=semver,pattern=v{{ major }}.{{ minor }}    # v1.2
            type=semver,pattern=v{{ version }}              # v1.2.3
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: images/pixelfed/Dockerfile
          target: ${{ matrix.target_runtime }}-runtime
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            PHP_BASE_TYPE=${{ matrix.php_base }}
            PHP_DEBIAN_RELEASE=${{ matrix.debian_release }}
          cache-from: |
            type=gha,scope=pixelfed-${{ matrix.target_runtime }}-${{ matrix.php_base }}-${{ matrix.php_version }}-${{ matrix.debian_release }}
          cache-to: |
            type=gha,mode=max,ignore-error=true,scope=pixelfed-${{ matrix.target_runtime }}-${{ matrix.php_base }}-${{ matrix.php_version }}-${{ matrix.debian_release }}
