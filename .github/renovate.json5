{
    extends: [
        "config:recommended",
        ":pinDevDependencies",
        ":separateMultipleMajorReleases",
        "default:pinDigestsDisabled",
    ],
    schedule: [
        /* every 8 hours (4 times a day) */
        "* */8 * * *",
    ],
    automerge: true,
    baseBranches: ["main"],
    commitMessageSuffix: " in {{packageFile}}",
    dependencyDashboardAutoclose: true,
    labels: ["dependencies"],
    osvVulnerabilityAlerts: true,
    platformAutomerge: true,
    postUpdateOptions: ["npmDedupe"],
    prHourlyLimit: 10,
    vulnerabilityAlerts: {
        enabled: true,
        labels: ["security"],
    },
    packageRules: [
        {
            matchFileNames: ["package.json"],
            enabled: true,
        },
    ],
    customManagers: [
        {
            customType: "regex",
            fileMatch: ["(^|/)Dockerfile$", "(^|/)Dockerfile\\.[^/]*$"],
            matchStrings: [
                // example:
                //
                // # renovate: datasource=github-releases depName=hashicorp/terraform versioning=hashicorp
                // ENV DEFAULT_TERRAFORM_VERSION=x.x.x
                //
                // # renovate: datasource=github-releases depName=open-policy-agent/conftest
                // ARG DEFAULT_CONFTEST_VERSION=x.x.x
                "renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s(ARG|ENV) .*?_VERSION=(?<currentValue>.*)\\s",
            ],
            versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
            extractVersionTemplate: "^v(?<version>\\d+\\.\\d+\\.\\d+)",
        },
        {
            customType: "regex",
            fileMatch: ["^\\.github/workflows/[^/]+\\.ya?ml$"],
            matchStrings: [
                "renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*?_VERSION: (?<currentValue>.*)\\s",
            ],
            versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
            extractVersionTemplate: "^v(?<version>\\d+\\.\\d+\\.\\d+)",
        },
    ],
}
