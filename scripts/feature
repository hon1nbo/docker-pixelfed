#!/usr/bin/env bash

set -e -o errexit -o nounset -o pipefail

declare project_root="${PWD}"
command -v git &>/dev/null && project_root=$(git rev-parse --show-toplevel)

# shellcheck source=lib/shared.sh
source "${project_root}/scripts/lib/shared.sh"

declare -ra features=(
    enable-proxy
    enable-proxy-acme
    disable-proxy
    disable-proxy-acme
)

case "${1:-}" in
enable-proxy)
    action_start_newline "Enabling Docker Proxy"

    __dottie set --disabled \
        DOCKER_PROXY_PROFILE="" || action_error_exit

    action_ok "Docker Proxy was enabled"

    echo "TIP: if you want automatic LetsEncrypt certificates, you must also enable $(highlight "enable-proxy-acme"))"

    ;;

disable-proxy)
    action_start_newline "Disabling Docker Proxy and Docker PRoxy ACME (LetsEncrypt)"

    __dottie set \
        DOCKER_PROXY_PROFILE="disabled" \
        DOCKER_PROXY_ACME_PROFILE="disabled" || action_error_exit

    action_ok "Successfully disabled Docker Proxy and Docker Proxy ACME (LetsEncrypt)"

    ;;

enable-proxy-acme)
    action_start_newline "Enabling Docker Proxy and Docker Proxy ACME (LetsEncrypt)"

    __dottie set --disabled \
        DOCKER_PROXY_PROFILE="" \
        DOCKER_PROXY_ACME_PROFILE="" || action_error_exit

    action_ok "Successfully enabled Docker Proxy and Docker Proxy ACME (LetsEncrypt)"

    ;;

disable-proxy-acme)
    action_start_newline "Disabling Docker Proxy ACME"

    __dottie set \
        DOCKER_PROXY_ACME_PROFILE="disabled" || action_error_exit

    action_ok "Successfully Disabling Docker Proxy ACME (LetsEncrypt)"

    ;;

"")
    action_error_exit "missing feature argument. Valid options are one of [${features[*]}]"
    ;;

*)
    action_error_exit "unknown feature '$1'. Valid options are one of [${features[*]}]"
    ;;

esac
